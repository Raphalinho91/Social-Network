generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Invitation {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  senderId    String   @db.ObjectId
  recipientId String   @db.ObjectId
  accepted    Boolean  @default(false)

  sender      User     @relation("InvitationSender", fields: [senderId], references: [id])
  recipient   User     @relation("InvitationRecipient", fields: [recipientId], references: [id])
}

model User {
  id                  String       @id @default(auto()) @map("_id") @db.ObjectId
  firstName           String?
  lastName            String?
  userName            String       @unique
  dateOfBirth         String?
  phoneNumber         String       @unique
  email               String       @unique
  password            String
  tokens              TokenUser[]
  emailIsVerified     Boolean      @default(false)
  friends             Friend[]
  invitationsSent     Invitation[] @relation("InvitationSender")
  invitationsReceived Invitation[] @relation("InvitationRecipient")
}

type Friend {
  userName    String
  dateStarted DateTime
}

model TokenUser {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  token       String
  createdDate DateTime @default(now())
  expiratDate DateTime
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String   @db.ObjectId
}

model VerifyEmail {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String
  code        String
  createdAt   DateTime @default(now())
  expiresAt   DateTime
  codeIsValid Boolean  @default(false)
}
